CREATE TABLE IF NOT EXISTS current.customer
(
    	id_customer bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    	phone varchar(15) UNIQUE NOT NULL,
    	name varchar(50) NOT NULL,
    	surname varchar(50) NOT NULL,
    	middle_name varchar,
    	gender varchar(5) CHECK(gender IN('Man', 'Woman')) NOT NULL
);

CREATE TABLE IF NOT EXISTS current.transport_type
(
	id_type bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	transport_type varchar(50) CHECK(transport_type IN('Air', 'Ground', 'Rail', 'Water')) NOT NULL,
	capacity integer CHECK(capacity > 0) NOT NULL
);

CREATE TABLE IF NOT EXISTS current.transport
(
	id_transport bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	transport_name varchar(100) NOT NULL,
	is_active boolean DEFAULT TRUE,
	average_speed NUMERIC(5, 2) CHECK(average_speed > 0) NOT NULL,
	id_type bigint,
	FOREIGN KEY(id_type) REFERENCES current.transport_type(id_type)
	ON UPDATE CASCADE ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS current.delivery
(
	id_delivery bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	date_delivery timestamp DEFAULT current_timestamp NOT NULL,
	batch_size integer CHECK(batch_size > 0) NOT NULL,
	id_customer bigint,
	id_transport bigint,
	FOREIGN KEY(id_customer) REFERENCES current.customer(id_customer)
	ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY(id_transport) REFERENCES current.transport(id_transport)
	ON UPDATE CASCADE ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS current.tea_party
(
	id_party bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	date_of_collection date DEFAULT current_date NOT NULL,
	tea_quantity integer CHECK(tea_quantity > 0) NOT NULL,
	batch_price numeric(10, 3) CHECK(batch_price > 0) NOT NULL,
	id_delivery bigint,
	FOREIGN KEY(id_delivery) REFERENCES current.delivery(id_delivery)
	ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS current.employee
(
	id_employee bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	name varchar(50) NOT NULL,
    	surname varchar(50) NOT NULL,
    	middle_name varchar,
	post varchar(100) NOT NULL,
	salary numeric(10, 3) CHECK(salary > 0) NOT NULL
);

CREATE TABLE IF NOT EXISTS current.production_step
(
	id_step bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	duration interval NOT NULL,
	date_of_production timestamp DEFAULT current_timestamp NOT NULL,
	id_party bigint,
	FOREIGN KEY(id_party) REFERENCES current.tea_party (id_party)
	ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS current.employee_tea_party
(
    	employee_id_employee bigint NOT NULL REFERENCES current.employee (id_employee)
	ON UPDATE CASCADE ON DELETE CASCADE,
   	tea_party_id_party bigint NOT NULL REFERENCES current.tea_party (id_party)
	ON UPDATE CASCADE ON DELETE CASCADE,
	PRIMARY KEY(employee_id_employee, tea_party_id_party)
);

CREATE TABLE current.average_salaries -- Нужна для триггерной функции average_salary()
(
	id_average bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	average_salary numeric(10, 4) NOT NULL,
	last_updated timestamp with time zone DEFAULT current_timestamp
)